/* create custom CSS variables (also called custom properties) and apply them to the root of the page, making them accessible to all other CSS */
:root {
  /* declare a variable with `--` syntax */
  --dark: #003e49;
  --light: #ffefef;
  --link-color: #b9c6ae;
}

body {
  display: flex;
  flex-direction: column;
  line-height: 1.3;
  background-color: #e7fbff;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1%;
  background-color: var(--dark);
  color: var(--light);
  flex-direction: column;
}

h1 {
  font-size: 200%;
  margin-bottom: 5px;
}

h2 {
  margin: 2% 0;
  font-size: 250%;
}

aside {
    position: fixed;
    left: 20px;
    width: 390px;
    background-color: var(--dark);
    color: var(--light);
    text-align: center;
    padding: 27px;
    border-radius: 15px;
}

aside img {
    display: flex;
    border-radius: 100%;
    border-width: 2px;
    border-color: black;
    max-width: 50%;
    height: auto;
    margin: auto;
}

nav ul {
  display: flex;
  justify-content: space-between;
  min-width: 300px;
}

nav a {
  background-color: unset;
  color: var(--link-color);
  font-weight: bold;
  text-decoration: none;
}

nav a:hover {
  color: var(--light);
}

main {
  display: flex;
  flex: 1 1 0;
  max-width: 96%;
  margin: 2% auto;
  flex-wrap: wrap;
}

article {
    margin-left: 430px;
}

article p {
  margin: 2% 0;
  font-size: 110%;
}

footer {
  display: flex;
  justify-content: center;
  padding: 2%;
  background-color: var(--dark);
  color: var(--light);
}

/* Style for the button group */
.buttons {
  display: flex; /* Display buttons in a row */
  justify-content: center; /* Center-align buttons horizontally */
  flex-wrap: wrap;
  width: auto;
}

/* Style for the expanding button container */
.expand {
  position: relative; /* Establish a positioning context */
  display: inline-block; /* Display as inline block */
  margin: 0px 50px; /* Space between buttons */
  margin-bottom: 300px;
  padding: 15px 30px; /* Padding for the button */
  border: 2px solid var(--dark); /* Border for the button */
  background-color: var(--link-color); /* Background color of the button */
  color: var(--dark); /* Text color of the button */
  text-decoration: none; /* Remove underlines from the link */
  cursor: pointer; /* Change cursor to indicate interactivity */
  transition: background-color 0.3s ease; /* Smooth transition on hover */
  width: 250px;
  text-align: center;
}

/* Styling for the additional content */
.additional-content {
  position: absolute; /* Position absolutely within the button */
  margin: 15px -104px;
  display: none; /* Initially hide the content */
  padding: 10px; /* Padding for the content */
  background-color: var(--link-color); /* Background color of the content */
  border: 1px solid var(--dark); /* Border for the content */
  width: 400px; /* Width of the content */
  z-index: 1;
}

/* Show additional content when hovering over the button */
.expand:hover .additional-content {
  display: block; /* Display the content on hover */
}

/* Change background color on hover */
.expand:hover {
  background-color: #f9f9f9;
  color: var(--dark);
}

article img {
  display: flex;
  position: absolute;
  max-width: 300px;
  height: auto;
  z-index: -1;
  margin: 0 -56px;
  border-style: solid;
  border-color: var(--dark);
  border-radius: 2%;
}

@media screen and (max-width: 768px) {
  header {
    flex-direction: column;
  }

  main {
    max-width: 1200px;
  }
}
